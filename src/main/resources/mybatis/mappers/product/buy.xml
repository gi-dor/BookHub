<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookhub.product.mapper.BuyMapper">

    <resultMap id="CouponListResultMap" type="com.example.bookhub.product.vo.CouponProduced">
        <id column="coupon_produced_no" property="couponProducedNo"/>
        <result column="due_date" property="dueDate"/>
        <result column="last_amount" property="lastAmount"/>
        <association column="coupon_no" property="coupon"
                     select="com.example.bookhub.product.mapper.BuyMapper.getCouponByNo"/>
    </resultMap>

    <resultMap id="CouponResultMap" type="com.example.bookhub.product.vo.Coupon">
        <id column="coupon_no" property="couponNo"/>
        <result column="coupon_name" property="name"/>
        <result column="coupon_price" property="price"/>
    </resultMap>

    <resultMap id="UserDeliveryResultMap" type="com.example.bookhub.user.vo.UserDelivery">
        <id column="delivery_no" property="no"/>
        <result column="recipient_name" property="name"/>
        <result column="recipient_tel" property="tel"/>
        <result column="user_zip_code" property="zipCode"/>
        <result column="user_address" property="address"/>
        <result column="user_address_detail" property="addressDetail"/>
        <result column="user_default_address_yn" property="defaultAddressYn"/>
    </resultMap>

    <resultMap id="BuyDeliveryRequestResultMap" type="com.example.bookhub.product.vo.BuyDeliveryRequest">
        <id column="buy_delivery_request_no" property="buyDeliveryRequestNo"/>
        <result column="buy_delivery_request_name" property="name"/>
    </resultMap>

    <!-- association -->
    <select id="getCouponByNo" parameterType="long" resultMap="CouponResultMap">
        select
            coupon_no,
            coupon_name,
            coupon_price
        from
            COUPON
        where
            coupon_no = #{value}
    </select>

    <select id="getCouponsByUserNo" parameterType="long" resultMap="CouponListResultMap">
        select
            coupon_produced_no,
            due_date,
            last_amount,
            coupon_no
        from
             COUPON_PRODUCED
        where
             user_no = #{value}
             and due_date >= sysdate()
             and used = 'N'
    </select>

    <select id="getPointByUserNo" parameterType="long" resultType="int">
        select
            user_point
        from
             USER
        where
            user_no = #{value}
    </select>

    <insert id="createBuy" parameterType="com.example.bookhub.product.vo.Buy" >
        insert into BUY
        (total_price, total_book_discount_price, total_coupon_discount_amount, total_point_use_amount, final_price, point_accumulation_amount,
         common_entrance_approach, common_entrance_password, gift_yn, buy_pay_method_no, buy_status_no, buy_delivery_request_no, user_no, delivery_no, order_id)
        values
        (#{totalPrice}, #{totalBookDiscountPrice}, #{totalCouponDiscountAmount}, #{totalPointUseAmount}, #{finalPrice}, #{pointAccumulationAmount},
         #{commonEntranceApproach}, "1234", #{giftYn}, #{buyPayMethod.buyPayMethodNo}, 2, #{buyDeliveryRequest.buyDeliveryRequestNo}, #{user.no}, #{userDelivery.no}, #{orderId})

         <selectKey keyProperty="buyNo" resultType="long" order="AFTER">
             select last_insert_id()
         </selectKey>
    </insert>

    <insert id="createBuyBook" parameterType="com.example.bookhub.product.vo.BuyBook">
        insert into BUY_BOOK
        (buy_no, book_no, count)
        values
        (#{buyNo}, #{bookNo}, #{count})
    </insert>

    <insert id="createCouponUsed" parameterType="com.example.bookhub.product.vo.CouponUsed">
        insert into COUPON_USED
        (discount_amount, coupon_produced_no, buy_no)
        values
        (#{discountAmount}, #{couponProducedNo}, #{buyNo})
    </insert>

    <select id="getCouponProducedLastAmount" parameterType="long" resultType="int">
        select
            last_amount
        from
            COUPON_PRODUCED
        where
            coupon_produced_no = #{couponProducedNo}
    </select>

    <update id="updateCouponProducedUsed">
        update COUPON_PRODUCED
        <set>
            last_amount = last_amount - #{couponDiscountAmount},
            used =
            <choose>
                <when test='used == "Y"'>
                    'Y'
                </when>
                <when test='used == "N"'>
                    'N'
                </when>
            </choose>
        </set>
        where coupon_produced_no = #{couponProducedNo}
    </update>

    <update id="updatePointUsed" parameterType="map">
        update USER
        set user_point = user_point - #{totalPointUseAmount}
        where user_no = #{userNo}
    </update>

    <select id="getUserDeliveryByUserNo" parameterType="long" resultMap="UserDeliveryResultMap">
        select
            delivery_no,
            recipient_name,
            recipient_tel,
            user_zip_code,
            user_address,
            user_address_detail,
            user_default_address_yn
        from
             USER_DELIVERY
        where
            user_no = #{value}
    </select>

    <select id="getBuyDeliveryRequest" resultMap="BuyDeliveryRequestResultMap">
        select
            buy_delivery_request_no,
            buy_delivery_request_name
        from
            BUY_DELIVERY_REQUEST
    </select>

    <update id="updateDefaultUserDeliveryN" parameterType="long">
        UPDATE USER_DELIVERY
        SET user_default_address_yn = 'N'
        WHERE delivery_no != #{selectedUserDeliveryNo}
    </update>

    <update id="updateDefaultUserDeliveryY" parameterType="long">
        UPDATE USER_DELIVERY
        SET user_default_address_yn = 'Y'
        WHERE delivery_no = #{selectedUserDeliveryNo}
    </update>

    <insert id="createUserDelivery" parameterType="com.example.bookhub.user.vo.UserDelivery">
        insert into USER_DELIVERY
        (recipient_name, recipient_tel, user_zip_code, user_address, user_address_detail, user_default_address_yn, user_no)
        values
        (#{name}, #{tel}, #{zipCode}, #{address}, #{addressDetail}, 'N', #{user.no})

        <selectKey keyProperty="no" resultType="long" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="updateBookStock">
        update
            BOOK
        set
            book_stock = book_stock - #{count}
        where
            book_no = #{bookNo}
    </update>

    <select id="getBookStock" parameterType="long" resultType="int">
        select
            book_stock
        from
            BOOK
        where
            book_no = #{bookNo}
    </select>

    <select id="getBuyerYn" resultType="String">
        SELECT
            CASE
                WHEN EXISTS (
                        SELECT 1
                        FROM BUY B, BUY_BOOK BB
                        WHERE B.refund_yn != 'Y'
                AND B.gift_yn != 'Y'
                AND B.user_no = #{userNo}
                AND B.buy_no = BB.buy_no
                AND BB.book_no = #{bookNo}
            ) THEN 'Y'
                ELSE 'N'
            END AS result
    </select>

    <select id="getCouponCountByUserNo" parameterType="long" resultType="int">
        select
            count(*)
        from
            COUPON_PRODUCED
        where
            user_no = #{value}
            and due_date >= sysdate()
            and used = 'N'
    </select>

    <update id="updatePointAccumulated">
        update
            USER
        set
            user_point = user_point + #{pointAccumulationAmount}
        where
            user_no = #{userNo}
    </update>

</mapper>